buildscript {
    ext {
        pahoMqttVersion = '1.2.5'
        httpclientVersion = '4.5.13'
                
        watsonIotVersion = '0.2.6'
        azureIotVersion = '1.23.0'
        
        bouncyCastleVersion = '1.65'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

def getCurrentGitBranch() {
    def gitBranch = "Unknown"
    try {
        def workingDir = new File("${project.projectDir}")
        def result = 'git rev-parse --abbrev-ref HEAD'.execute(null, workingDir)
        result.waitFor()
        if (result.exitValue() == 0) {
            gitBranch = result.text.trim()
        }
    } catch (e) {
    }
    return gitBranch
}

def getLastGitCommit() {
    def lastGitCommit = "Unknown"
    try {
        def workingDir = new File("${project.projectDir}")
        def result = 'git log --pretty=format:"%h | %ad | %an" --date=iso -1'.execute(null, workingDir)
        result.waitFor()
        if (result.exitValue() == 0) {
            lastGitCommit = result.text.trim()
        }
    } catch (e) {
    }
    return lastGitCommit
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    
    sourceCompatibility = 1.8
    targetCompatibility = 1.8    

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.12'
    }

    group = 'com.konexios'
    version = '2021.12.0'
    
    compileJava.dependsOn(processResources)

    configurations {
        all*.exclude module: "logback-classic"
        all*.exclude module: "slf4j-log4j12"
        all*.exclude module: "log4j"
    }
           
    task wrapper(type: Wrapper) {
        gradleVersion = '6.9'        
    }   
    
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }
}

project(':acn-core') {
    dependencies {
    }
}

project(':acn-client') {
    dependencies {
        compile project(':acn-core')
    }
}

project(':acn-client-azure') {
    dependencies {
        compile project(':acn-client')
    }
}

project(':acn-client-aws') {
    dependencies {
        compile project(':acn-client')
    }
}

project(':acn-client-ibm') {
    dependencies {
        compile project(':acn-client')
    }
}
